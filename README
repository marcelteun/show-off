BACKGROUND
----------

I have the need to show 3D models of polyhedra on my web-site. Traditionally I
showed these in VRML/X3D, but no one has a plug-in anymore, not even myself. I
looked around a bit and thought of using Sketchfab, but it wasn't really what I
wanted. The biggest problem was that I would need quite a lot of manual labour.
Some of my pages are generated by a program and all the embedding from Sketchfab
would be through some generated ID. Another problem was that I have all my
models in the 'off' file format, which isn't supported (not now at least). So I
would have to convert all my files.

This is why I decided to write my own code that could interpret an off file and
show it in 3D on some HTML 5 page. In that case I could also decide how the
interface works, because I like to be able to rotate the model around the z-axis
(the one that comes straight out of the screen) which seemed to be missing at
Sketchfab. I didn't spend so much time looking for another library that I could
use. The off-file format is standard for the small group of people who occupy
themselves with polyhedra, but as a 3D modeling format it is hardly used, since
it lacks material descriptions: you can only specify a colour. You cannot
specify faces with holes either.

FILE TO USE: BUNDLE
-------------------

If you just want to use the JavaScript file directly, use the generated file:
dist/show-off-bundle.js

HOW TO GENERATE JS BUNDLE
-------------------------

You might want to generate the bundle yourself, e.g. when you are developing and
you want to debug. In that case you would update webpack.config.js
-  mode: 'production'
+  mode: 'development'
And generate the bundle.

In that case you will need to install and use NodeJS.
On my Debian PC I get it from deb.nodesource.com, see
https://github.com/nodesource/distributions
for instructions.

I build the JS bundle by:
# npm install
# npx webpack

Then the bundle can be found in the dists directory.

HOW TO USE JS BUNDLE
--------------------

The tst directory contains an example of how to use the show-off-bundle.js

INTERFACE
---------

Navigation by Mouse

Left click a mouse and move it to rotate the object, normally in an intuitive
way: it is as if you touch a ball an spin it. This way isn't implemented all the
way through though, since I also wanted that if you return to your starting
point and release the object should have its original orientation. I have the
following three requirements for the rotation:
1. Intuitive
2. Go back to original position, by release at original position.
3. Be able to rotated around an axis that comes out of the screen.

Requirement number 3 can be done by picking up the object in the outer area and
spin it clockwise or counter-clockwise in the outer area. The consequence of
requirement number 2 is the non-intuitive rotation when crossing the border
between the outer and the inner area.

To zoom: use the Shift button and the mouse. Zooming follows a plane throttle.
         Use the mouse wheel in a similar way.

To jump back to the original zoom / rotation: '5'
To undo only the zoom: 'Shift-5'.
To undo only the rotation: 'Alt-Shift-5'

Convex and concave faces
By default concave faces are supported by means of a stencil buffer. This means
that two passes are required and all faces need to be considered separately.
This isn't very efficient, so there is a way to optimise this for objects that
only have convex faces:

The key 'c' is used to toggle support for concave and convex faces. This is also
a parameter to the function showing the off-file, since usually (though not
always) this is known.

Navigation by Touch

Rotation of the object is done by one touch. Rotation works the same as
explained in "Navigation by Mouse", where the area is divided into an inner area
and an outer area. Rotating in the outer area results in a clockwise or
anti-clockwise rotation.

Zooming is done by double touch. By moving two fingers apart you zoom in, and
zooming out is done by moving the two fingers closer to eachother.

A triple touch resets all positioning.

On can add a finger and switch to the other navigation, but one cannot switch
back.

TODO
----

- Add button to toggle zoom direction.
- Use div.id and size as imput and let js add canvas sizexsize. Then the script
  can add instructions too?
- Buttons to show faces, edges, vertices ('f', 'e', 'v')
- Some animationed file format, derived from 'off' for cube compounds.
  animated-off: only needs axis and angle domain.
- Add navigation help as standard.
- Use versions
- use more ECMAScript 6 features.

LICENSE
-------

GNU Public License version 2

Note: I have had problems with npm stripping away the license for gl-matrix.js
If you are going to use the bundle I advise you to include the license again.

ACKNOWLEDGEMENTS
----------------

Thanks to NeHe for his excellent guide at
http://learningwebgl.com/blog/?page_id=1217

Thanks to Brandon Jones and Colin MacKenzie IV for the gl-matrix.js library.

During the development stackoverflow was used a eagerly:
https://stackoverflow.com
